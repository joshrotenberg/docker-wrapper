name: Release Please

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
      upload_url: ${{ steps.release.outputs.upload_url }}

    steps:
      - name: Create Release PR or Release
        uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: rust
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  publish-crates:
    name: Publish to Crates.io
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.release_created
    environment: release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: swatinem/rust-cache@v2
        with:
          shared-key: "release"

      - name: Run security audit
        run: |
          cargo install cargo-audit
          cargo audit

      - name: Run full test suite
        run: |
          cargo fmt -- --check
          cargo clippy --all-targets --all-features -- -D warnings
          cargo test --verbose --lib --all-features
          cargo doc --all-features --no-deps

      - name: Test package
        run: |
          cargo package --verbose
          cargo package --list

      - name: Publish to crates.io
        run: cargo publish --verbose
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

  integration-test:
    name: Integration Test (Release)
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.release_created

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: swatinem/rust-cache@v2
        with:
          shared-key: "integration-release"

      - name: Start Docker daemon
        run: |
          sudo systemctl start docker
          docker --version

      - name: Pull test images
        run: |
          docker pull alpine:latest
          docker pull redis:7.2-alpine

      - name: Run integration tests
        run: cargo test --verbose --test phase2_integration --all-features
        env:
          DOCKER_HOST: unix:///var/run/docker.sock

  update-documentation:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: [release-please, publish-crates]
    if: needs.release-please.outputs.release_created

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build documentation
        run: |
          cargo doc --all-features --no-deps
          echo '<meta http-equiv="refresh" content="0; url=docker_wrapper">' > target/doc/index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc
          destination_dir: ${{ needs.release-please.outputs.version }}

      - name: Update latest documentation link
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc
          destination_dir: latest

  notify-release:
    name: Notify Release Complete
    runs-on: ubuntu-latest
    needs:
      [release-please, publish-crates, integration-test, update-documentation]
    if: needs.release-please.outputs.release_created && success()

    steps:
      - name: Release Success Summary
        run: |
          echo "üéâ Successfully released Docker Wrapper ${{ needs.release-please.outputs.version }}"
          echo ""
          echo "üì¶ Crates.io: https://crates.io/crates/docker-wrapper"
          echo "üè∑Ô∏è  GitHub Release: https://github.com/${{ github.repository }}/releases/tag/${{ needs.release-please.outputs.tag_name }}"
          echo "üìö Documentation: https://docs.rs/docker-wrapper/${{ needs.release-please.outputs.version }}"
          echo "üåê GitHub Pages: https://${{ github.repository_owner }}.github.io/docker-wrapper/${{ needs.release-please.outputs.version }}"
          echo ""
          echo "Installation command:"
          echo "cargo add docker-wrapper@${{ needs.release-please.outputs.version }}"

      - name: Create success issue comment
        if: github.event_name == 'push'
        run: |
          echo "Release ${{ needs.release-please.outputs.version }} has been successfully published!"
          echo "- ‚úÖ Published to crates.io"
          echo "- ‚úÖ Integration tests passed"
          echo "- ‚úÖ Documentation updated"
          echo "- ‚úÖ GitHub release created"
